buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
        mavenCentral()
        maven { url 'https://s01.oss.sonatype.org' }
        gradlePluginPortal()
        mavenLocal()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "com.badlogicgames.jnigen:jnigen-gradle:$jniGenVersion"
    }
}

plugins {
    id 'java'
}

apply plugin: "com.badlogicgames.jnigen.jnigen-gradle"

group 'games.rednblack.miniaudio'
version '0.6'

repositories {
    maven { url 'https://jitpack.io' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    mavenCentral()
}

dependencies {
    implementation "com.badlogicgames.jnigen:jnigen-loader:$jniGenVersion"
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
}

java {
    withJavadocJar()
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
}

tasks.withType(JavaCompile) {
    if (JavaVersion.current().isJava9Compatible()) {
        options.compilerArgs += ["--release", "7"]
    }
}

jnigen {
    sharedLibName = "gdx-miniaudio"

    all {
        headerDirs += ["jni"]
        cIncludes  += ["jni/stb_vorbis.c"]
        libraries  += ["-lm", "-lpthread", "-ldl"]
    }

    addWindows(x32, x86)
    addWindows(x64, x86)

    addLinux(x64, x86)
    addLinux(x32, ARM)
    addLinux(x64, ARM)
    addLinux(x64, RISCV)

    addMac(x64, x86) {
        linkerFlags += ["-framework CoreFoundation", "-framework CoreAudio", "-framework Foundation", "-framework AVFAudio", "-framework AudioToolbox"]
    }
    addMac(x64, ARM) {
        linkerFlags += ["-framework CoreFoundation", "-framework CoreAudio", "-framework Foundation", "-framework AVFAudio", "-framework AudioToolbox"]
    }
    addIOS() {
        linkerFlags += ["-framework CoreFoundation", "-framework CoreAudio", "-framework Foundation", "-framework AVFAudio", "-framework AudioToolbox"]
        cppFlags += ["-x objective-c++"]
    }
    addAndroid() {
        libraries = ["-llog", "-landroid", "-lm", "-ldl"]
    }
}

apply from : 'publish.gradle'